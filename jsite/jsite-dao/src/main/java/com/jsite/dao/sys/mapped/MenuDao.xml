<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jsite.dao.sys.MenuDao">
	
	<sql id="menuColumns">
		a.id,
		a.parent_id AS "parent.id",
		a.parent_ids,
		a.name,
		a.href,
		a.target,
		a.icon,
		a.sort,
		a.is_show,
		a.permission,
		a.remarks,
		<!-- a.create_by AS "createBy.id", -->
		a.create_date,
		<!-- a.update_by AS "updateBy.id", -->
		a.update_date,
		a.del_flag,
		p.name AS "parent.name",
		a.leaf AS "leaf"
	</sql>
	
	<sql id="menuJoins">
		LEFT JOIN dds_sys_menu p ON p.id = a.parent_id
    </sql>
	
	<select id="get" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM dds_sys_menu a
		<include refid="menuJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findAllList" resultType="Menu">
		SELECT
			<include refid="menuColumns"/>
		FROM dds_sys_menu a
		<include refid="menuJoins"/>
		WHERE a.del_flag = #{DEL_FLAG_NORMAL}
		ORDER BY a.sort
	</select>
	
	<select id="findByParentIdsLike" resultType="Menu">
		SELECT
			a.id,
			a.parent_id AS "parent.id",
			a.parent_ids
		FROM dds_sys_menu a
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND a.parent_ids LIKE #{parentIds}
		ORDER BY a.sort
	</select>
	
	<select id="findByUserId" resultType="Menu">
		SELECT DISTINCT
			<include refid="menuColumns"/>
		FROM dds_sys_menu a
		LEFT JOIN dds_sys_menu p ON p.id = a.parent_id
		JOIN dds_sys_role_menu rm ON rm.menu_id = a.id
		JOIN dds_sys_role r ON r.id = rm.role_id AND r.useable='1'
		JOIN dds_sys_user_role ur ON ur.role_id = r.id
		JOIN dds_sys_userinfo u ON u.user_code = ur.user_id AND u.user_code = #{userId}
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} AND r.del_flag = #{DEL_FLAG_NORMAL}
		AND a.is_show = #{isShow}
		ORDER BY a.sort
	</select>
	
	<select id="findByRoleId" resultType="Menu">
		SELECT DISTINCT
			<include refid="menuColumns"/>
		FROM dds_sys_menu a
		LEFT JOIN dds_sys_menu p ON p.id = a.parent_id
		JOIN dds_sys_role_menu rm ON rm.menu_id = a.id		
		WHERE a.del_flag = #{DEL_FLAG_NORMAL} 
		AND a.is_show = #{isShow}
		<if test="roleId != null and roleId != ''">
			AND rm.role_id in
			<foreach collection="roleId" item="rid" index="index"
				open="(" close=")" separator=",">
				#{rid}
			</foreach>
		</if>
		
		ORDER BY a.sort
	</select>
	
	<insert id="save">
		INSERT INTO dds_sys_menu(
			id, 
			parent_id, 
			parent_ids, 
			name, 
			href, 
			target, 
			icon, 
			sort, 
			is_show, 
			permission, 
			<!--create_by,  -->
			create_date, 
			<!--update_by,  -->
			update_date, 
			remarks, 
			del_flag,
			leaf
		) VALUES (
			#{id}, 
			#{parent.id}, 
			#{parentIds}, 
			#{name}, 
			#{href}, 
			#{target}, 
			#{icon}, 
			#{sort}, 
			#{isShow}, 
			#{permission}, 
			<!-- #{createBy.id},  -->
			#{createDate}, 
			<!-- #{updateBy.id},  -->
			#{updateDate}, 
			#{remarks}, 
			#{delFlag},
			#{leaf}
		)
	</insert>
	
	<update id="update">
		UPDATE dds_sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}, 
			name = #{name}, 
			href = #{href}, 
			target = #{target}, 
			icon = #{icon}, 
			sort = #{sort}, 
			is_show = #{isShow}, 
			permission = #{permission}, 
			<!--update_by = #{updateBy.id},  -->
			update_date = #{updateDate}, 
			remarks = #{remarks},
			leaf = #{leaf}
		WHERE id = #{id}
	</update>
	
	<update id="updateParentIds">
		UPDATE dds_sys_menu SET 
			parent_id = #{parent.id}, 
			parent_ids = #{parentIds}
		WHERE id = #{id}
	</update>
	
	<update id="updateSort">
		UPDATE dds_sys_menu SET 
			sort = #{sort}
		WHERE id = #{id}
	</update>
	
	<update id="remove">
		UPDATE dds_sys_menu SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id} 
	</update>
	
</mapper>